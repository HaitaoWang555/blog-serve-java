<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wht.blog.dao.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.wht.blog.entity.Article">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
        <result column="author_id" property="authorId" jdbcType="INTEGER"/>
        <result column="hits" property="hits" jdbcType="INTEGER"/>
        <result column="tags" property="tags" jdbcType="VARCHAR"/>
        <result column="category" property="category" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="allow_comment" property="allowComment" jdbcType="BIT"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.wht.blog.entity.Article" extends="BaseResultMap">
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, title, created_at, updated_at, author_id, hits, tags, category, status, type, allow_comment
    </sql>
    <sql id="Blob_Column_List">
        content
    </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from article
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="getAllWithContent" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from article
    </select>
    <select id="getAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from article
    </select>
    <select id="search" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from article
        <where>
            <if test="title!=null">
                and title like concat('%',#{title},'%')
            </if>
            <if test="authorId!=null">
                and author_id = #{authorId,jdbcType=INTEGER}
            </if>
            <if test="status!=null">
                and status = #{status,jdbcType=VARCHAR}
            </if>
            <if test="type!=null">
                and type = #{type,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM article
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByPrimaryKeyBatch" parameterType="java.util.Map">
        DELETE FROM article
        WHERE id IN (${ids})
    </delete>
    <insert id="insert" parameterType="com.wht.blog.entity.Article">
        INSERT INTO article (id, title, created_at,
                             updated_at, author_id, hits,
                             tags, category, status,
                             type, allow_comment, content
        )
        VALUES (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP},
                                        #{updatedAt,jdbcType=TIMESTAMP}, #{authorId,jdbcType=INTEGER},
                                        #{hits,jdbcType=INTEGER},
                                        #{tags,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR},
                                        #{status,jdbcType=VARCHAR},
                                        #{type,jdbcType=VARCHAR}, #{allowComment,jdbcType=BIT},
                #{content,jdbcType=LONGVARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.wht.blog.entity.Article" useGeneratedKeys="true" keyProperty="id" >
        insert into article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="authorId != null">
                author_id,
            </if>
            <if test="hits != null">
                hits,
            </if>
            <if test="tags != null">
                tags,
            </if>
            <if test="category != null">
                category,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="allowComment != null">
                allow_comment,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="authorId != null">
                #{authorId,jdbcType=INTEGER},
            </if>
            <if test="hits != null">
                #{hits,jdbcType=INTEGER},
            </if>
            <if test="tags != null">
                #{tags,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                #{category,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="allowComment != null">
                #{allowComment,jdbcType=BIT},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.wht.blog.entity.Article">
        update article
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="authorId != null">
                author_id = #{authorId,jdbcType=INTEGER},
            </if>
            <if test="hits != null">
                hits = #{hits,jdbcType=INTEGER},
            </if>
            <if test="tags != null">
                tags = #{tags,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                category = #{category,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="allowComment != null">
                allow_comment = #{allowComment,jdbcType=BIT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wht.blog.entity.Article">
        UPDATE article
        SET title         = #{title,jdbcType=VARCHAR},
            created_at    = #{createdAt,jdbcType=TIMESTAMP},
            updated_at    = #{updatedAt,jdbcType=TIMESTAMP},
            author_id     = #{authorId,jdbcType=INTEGER},
            hits          = #{hits,jdbcType=INTEGER},
            tags          = #{tags,jdbcType=VARCHAR},
            category      = #{category,jdbcType=VARCHAR},
            status        = #{status,jdbcType=VARCHAR},
            type          = #{type,jdbcType=VARCHAR},
            allow_comment = #{allowComment,jdbcType=BIT},
            content       = #{content,jdbcType=LONGVARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wht.blog.entity.Article">
        UPDATE article
        SET title         = #{title,jdbcType=VARCHAR},
            created_at    = #{createdAt,jdbcType=TIMESTAMP},
            updated_at    = #{updatedAt,jdbcType=TIMESTAMP},
            author_id     = #{authorId,jdbcType=INTEGER},
            hits          = #{hits,jdbcType=INTEGER},
            tags          = #{tags,jdbcType=VARCHAR},
            category      = #{category,jdbcType=VARCHAR},
            status        = #{status,jdbcType=VARCHAR},
            type          = #{type,jdbcType=VARCHAR},
            allow_comment = #{allowComment,jdbcType=BIT}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
</mapper>